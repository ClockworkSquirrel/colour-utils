[{"title":"APCA","type":0,"sectionRef":"#","url":"api/APCA","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"APCA","url":"api/APCA#functions","content":" "},{"title":"GetContrastRatio​","type":1,"pageTitle":"APCA","url":"api/APCA#GetContrastRatio","content":"&lt;/&gt; APCA.GetContrastRatio( foreground: Color3 ,-- The foreground colour. background: Color3 -- The background colour. ) → number-- The contrast ratio [≈-100-100].  "},{"title":"Blend","type":0,"sectionRef":"#","url":"api/Blend","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Blend","url":"api/Blend#functions","content":" "},{"title":"Screen​","type":1,"pageTitle":"Blend","url":"api/Blend#Screen","content":"&lt;/&gt; Blend.Screen( background: Color3 ,-- The background colour. foreground: Color3 -- The foreground colour. ) → Color3 -- The resulting colour.   "},{"title":"Multiply​","type":1,"pageTitle":"Blend","url":"api/Blend#Multiply","content":"&lt;/&gt; Blend.Multiply( background: Color3 ,-- The background colour. foreground: Color3 -- The foreground colour. ) → Color3 -- The resulting colour.   "},{"title":"Overlay​","type":1,"pageTitle":"Blend","url":"api/Blend#Overlay","content":"&lt;/&gt; Blend.Overlay( background: Color3 ,-- The background colour. foreground: Color3 -- The foreground colour. ) → Color3 -- The resulting colour.   "},{"title":"Burn​","type":1,"pageTitle":"Blend","url":"api/Blend#Burn","content":"&lt;/&gt; Blend.Burn( background: Color3 ,-- The background colour. foreground: Color3 -- The foreground colour. ) → Color3 -- The resulting colour.   "},{"title":"Dodge​","type":1,"pageTitle":"Blend","url":"api/Blend#Dodge","content":"&lt;/&gt; Blend.Dodge( background: Color3 ,-- The background colour. foreground: Color3 -- The foreground colour. ) → Color3 -- The resulting colour.  "},{"title":"Blind","type":0,"sectionRef":"#","url":"api/Blind","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Blind","url":"api/Blind#types","content":" "},{"title":"Enums​","type":1,"pageTitle":"Blind","url":"api/Blind#Enums","content":"&lt;/&gt; interface Enums { Blind: Blind-- Types of colour blindness. Group: Group-- Colour blindness groups. }   "},{"title":"Blind​","type":1,"pageTitle":"Blind","url":"api/Blind#Blind","content":"Enum &lt;/&gt; interface Blind { Trichromacy: 0-- No colour blindness. Protanopia: 1-- Red blind. Protanomaly: 2-- Red deficient. Deuteranopia: 3-- Green blind. Deuteranomaly: 4-- Green deficient. Tritanopia: 5-- Blue blind. Tritanomaly: 6-- Blue deficient. Achromatopsia: 7-- All colours are absent. Achromatomaly: 8-- All colours are deficient. None: 0-- Trichromacy (no colour blindness). NoRed: 1-- Protanopia (red blind). LowRed: 2-- Protanomaly (red deficient). NoGreen: 3-- Deuteranopia (green blind). LowGreen: 4-- Deuteranomaly (green deficient). NoBlue: 5-- Tritanopia (blue blind). LowBlue: 6-- Tritanomaly (blue deficient). NoColour: 7-- Achromatopsia (totally colour blind). LowColour: 8-- Achromatomaly (colour deficient). } The Blind enum is used to represent the different types of colour blindness. It features a number of aliases for non-scientists.  "},{"title":"Group​","type":1,"pageTitle":"Blind","url":"api/Blind#Group","content":"Enum &lt;/&gt; interface Group { Trichroma: 0-- Trichromacy (no colour blindness). Protan: 1-- Protanopia/Protanomaly. Deutan: 2-- Deuteranopia/Deuteranomaly. Tritan: 3-- Tritanopia/Tritanomaly. Achroma: 4-- Achromatopsia/Achromatomaly. } The Group enum is used to represent the different groups of colour blindness. It is used internally by the Simulate method to determine which colour blindness simulation to use. It is unlikely that you will need to use this enum. "},{"title":"Functions​","type":1,"pageTitle":"Blind","url":"api/Blind#functions","content":" "},{"title":"Simulate​","type":1,"pageTitle":"Blind","url":"api/Blind#Simulate","content":"&lt;/&gt; Blind.Simulate( colour: Color3 ,-- The colour to simulate. blinder: Blind-- The blinder to simulate with. ) → Color3 -- The simulated colour.  "},{"title":"Hex","type":0,"sectionRef":"#","url":"api/Hex","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Hex","url":"api/Hex#functions","content":" "},{"title":"fromHex​","type":1,"pageTitle":"Hex","url":"api/Hex#fromHex","content":"&lt;/&gt; Hex.fromHex( hex: string-- The hex string to convert. ) → Color3 -- The resulting Color3.  tip You can use hex values in any format. This includes with or without a leading hash, any case, and any length (FromHex will try to interpret malformed hex codes as best as possible).  "},{"title":"ColourUtils","type":0,"sectionRef":"#","url":"api/ColourUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#functions","content":" "},{"title":"GetPerceivedBrightness​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#GetPerceivedBrightness","content":"&lt;/&gt; ColourUtils.GetPerceivedBrightness( colour: Color3 -- The colour to get the perceived brightness of. ) → number-- The perceived brightness of the colour [0-1].   "},{"title":"Saturate​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#Saturate","content":"&lt;/&gt; ColourUtils.Saturate( colour: Color3 ,-- The colour to saturate. coefficient: number-- The coefficient to saturate by [0-1]. ) → Color3 -- The saturated colour.   "},{"title":"GetContrastRatio​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#GetContrastRatio","content":"&lt;/&gt; ColourUtils.GetContrastRatio( foreground: Color3 ,-- The foreground colour. background: Color3 -- The background colour. ) → number-- The contrast ratio [0-21].  caution GetContrastRatio is now redirected to WCAG.GetContrastRatio. You should directly use the WCAG module in newer work. This redirect is for backwards compatibility, and may be removed or changed in future versions.  "},{"title":"Darken​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#Darken","content":"&lt;/&gt; ColourUtils.Darken( colour: Color3 ,-- The colour to darken. coefficient: number-- The amount to darken by [0-1]. ) → Color3 -- The darkened colour.   "},{"title":"GetContrastingColour​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#GetContrastingColour","content":"&lt;/&gt; ColourUtils.GetContrastingColour( foreground: Color3 ,-- The foreground colour. background: Color3 ,-- The background colour. ratio?: number-- The ratio to check against [0-1] (defaults to 4.5). ) → Color3 -- The contrasting colour.  caution GetContrastingColour is now redirected to WCAG.GetContrastingColour. You should directly use the WCAG module in newer work. This redirect is for backwards compatibility, and may be removed or changed in future versions. tip GetContrastingColour is also available under the GetContrastingColor alias. This does not apply to the WCAG and APCA submodules!  "},{"title":"Invert​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#Invert","content":"&lt;/&gt; ColourUtils.Invert( colour: Color3 -- The colour to invert. ) → Color3 -- The inverted colour.   "},{"title":"Desaturate​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#Desaturate","content":"&lt;/&gt; ColourUtils.Desaturate( colour: Color3 ,-- The colour to desaturate. coefficient: number-- The coefficient to desaturate by [0-1]. ) → Color3 -- The desaturated colour.   "},{"title":"GetLuminance​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#GetLuminance","content":"&lt;/&gt; ColourUtils.GetLuminance( colour: Color3 -- The colour to get the luminance of. ) → number-- The luminance of the colour [0-1].   "},{"title":"isLight​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#isLight","content":"&lt;/&gt; ColourUtils.isLight( colour: Color3 -- The colour to check. ) → boolean-- Whether the colour is light.   "},{"title":"Emphasise​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#Emphasise","content":"&lt;/&gt; ColourUtils.Emphasise( colour: Color3 ,-- The colour to emphasise. coefficient: number,-- The amount to emphasise by [0-1]. threshold?: number-- The threshold for light/dark [0-1] (defaults to 0.5). ) → Color3 -- The emphasised colour.  tip Emphasise is also available under the Emphasize alias.  "},{"title":"Lighten​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#Lighten","content":"&lt;/&gt; ColourUtils.Lighten( colour: Color3 ,-- The colour to lighten. coefficient: number-- The amount to lighten by [0-1]. ) → Color3 -- The lightened colour.   "},{"title":"isDark​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#isDark","content":"&lt;/&gt; ColourUtils.isDark( colour: Color3 -- The colour to check. ) → boolean-- Whether the colour is dark.   "},{"title":"Rotate​","type":1,"pageTitle":"ColourUtils","url":"api/ColourUtils#Rotate","content":"&lt;/&gt; ColourUtils.Rotate( colour: Color3 ,-- The colour to rotate. angle: number-- The angle to rotate by. ) → Color3 -- The rotated colour.  "},{"title":"toHex​","type":1,"pageTitle":"Hex","url":"api/Hex#toHex","content":"&lt;/&gt; Hex.toHex( colour: Color3 -- The colour to convert. ) → string-- The hex representation of the colour.  note The hex string is always lowercase, will always be 6 characters long, and is not prefixed with a hash. "},{"title":"Int","type":0,"sectionRef":"#","url":"api/Int","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Int","url":"api/Int#functions","content":" "},{"title":"fromInt​","type":1,"pageTitle":"Int","url":"api/Int#fromInt","content":"&lt;/&gt; Int.fromInt( int: number-- The integer to convert. ) → Color3 -- The resulting Color3.   "},{"title":"toInt​","type":1,"pageTitle":"Int","url":"api/Int#toInt","content":"&lt;/&gt; Int.toInt( colour: Color3 -- The colour to convert. ) → number-- The integer representation of the colour.  "},{"title":"HSL","type":0,"sectionRef":"#","url":"api/HSL","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"HSL","url":"api/HSL#types","content":" "},{"title":"HSL​","type":1,"pageTitle":"HSL","url":"api/HSL#HSL","content":"&lt;/&gt; interface HSL { H: number S: number L: number }  "},{"title":"Functions​","type":1,"pageTitle":"HSL","url":"api/HSL#functions","content":" "},{"title":"toHSL​","type":1,"pageTitle":"HSL","url":"api/HSL#toHSL","content":"&lt;/&gt; HSL.toHSL( colour: Color3 -- The colour to convert. ) → HSL-- The HSL representation of the colour.   "},{"title":"fromHSL​","type":1,"pageTitle":"HSL","url":"api/HSL#fromHSL","content":"&lt;/&gt; HSL.fromHSL( hsl: HSL-- The HSL colour to convert. ) → Color3 -- The resulting Color3.  "},{"title":"LCH","type":0,"sectionRef":"#","url":"api/LCH","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"LCH","url":"api/LCH#functions","content":" "},{"title":"toLCH​","type":1,"pageTitle":"LCH","url":"api/LCH#toLCH","content":"&lt;/&gt; LCH.toLCH( colour: Color3 -- The color to convert. ) → LCH-- The converted color.   "},{"title":"fromLCH​","type":1,"pageTitle":"LCH","url":"api/LCH#fromLCH","content":"&lt;/&gt; LCH.fromLCH( lch: LCH-- The color to convert. ) → Color3 -- The converted color.  "},{"title":"LAB","type":0,"sectionRef":"#","url":"api/LAB","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"LAB","url":"api/LAB#types","content":" "},{"title":"LAB​","type":1,"pageTitle":"LAB","url":"api/LAB#LAB","content":"&lt;/&gt; interface LAB { L: number A: number B: number }  "},{"title":"Functions​","type":1,"pageTitle":"LAB","url":"api/LAB#functions","content":" "},{"title":"toLAB​","type":1,"pageTitle":"LAB","url":"api/LAB#toLAB","content":"&lt;/&gt; LAB.toLAB( colour: Color3 -- The colour to convert. ) → LAB-- The converted colour.   "},{"title":"fromLAB​","type":1,"pageTitle":"LAB","url":"api/LAB#fromLAB","content":"&lt;/&gt; LAB.fromLAB( lab: LAB-- The colour to convert. ) → Color3 -- The converted colour.  "},{"title":"WCAG","type":0,"sectionRef":"#","url":"api/WCAG","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"WCAG","url":"api/WCAG#functions","content":" "},{"title":"GetContrastRatio​","type":1,"pageTitle":"WCAG","url":"api/WCAG#GetContrastRatio","content":"&lt;/&gt; WCAG.GetContrastRatio( foreground: Color3 ,-- The foreground colour. background: Color3 -- The background colour. ) → number-- The contrast ratio [0-21].   "},{"title":"GetContrastingColour​","type":1,"pageTitle":"WCAG","url":"api/WCAG#GetContrastingColour","content":"&lt;/&gt; WCAG.GetContrastingColour( foreground: Color3 ,-- The foreground colour. background: Color3 ,-- The background colour. ratio?: number-- The ratio to check against [0-1] (defaults to 4.5). ) → Color3 -- The contrasting colour.  "},{"title":"Palette","type":0,"sectionRef":"#","url":"api/Palette","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Palette","url":"api/Palette#functions","content":" "},{"title":"Complementary​","type":1,"pageTitle":"Palette","url":"api/Palette#Complementary","content":"&lt;/&gt; Palette.Complementary( base: Color3 -- The base colour. ) → {Color3 }-- The complementary colours.   "},{"title":"SplitComplementary​","type":1,"pageTitle":"Palette","url":"api/Palette#SplitComplementary","content":"&lt;/&gt; Palette.SplitComplementary( base: Color3 -- The base colour. ) → {Color3 }-- The split complementary colours.   "},{"title":"Tailwind​","type":1,"pageTitle":"Palette","url":"api/Palette#Tailwind","content":"&lt;/&gt; Palette.Tailwind( base: Color3 -- The base colour. ) → TailwindPalette-- The generated palette. "},{"title":"Types","type":1,"pageTitle":"Palette","url":"api/Palette##","content":""},{"title":"​","type":1,"pageTitle":"Palette","url":"api/Palette#TailwindPalette","content":"interface TailwindPalette { 50: Color3 100: Color3 200: Color3 300: Color3 400: Color3 500: Color3 600: Color3 700: Color3 800: Color3 900: Color3 }    "},{"title":"Vibrant​","type":1,"pageTitle":"Palette","url":"api/Palette#Vibrant","content":"&lt;/&gt; Palette.Vibrant( swatches: {Color3 },-- The swatches to select from. options?: VibrantOptions-- The options to use. ) → Color3 -- The &quot;most vibrant&quot; colour. "},{"title":"Types","type":1,"pageTitle":"Palette","url":"api/Palette##","content":""},{"title":"​","type":1,"pageTitle":"Palette","url":"api/Palette#VibrantOptions","content":"interface VibrantOptions { TargetLuminance: number-- The target luminance. TargetSaturation: number-- The target saturation. TargetValue: number-- The target value. }  The default options are: { TargetLuminance = 0.49, TargetSaturation = 1, TargetValue = 0.8, }   "},{"title":"Triadic​","type":1,"pageTitle":"Palette","url":"api/Palette#Triadic","content":"&lt;/&gt; Palette.Triadic( base: Color3 -- The base colour. ) → {Color3 }-- The triadic colours.   "},{"title":"Analogous​","type":1,"pageTitle":"Palette","url":"api/Palette#Analogous","content":"&lt;/&gt; Palette.Analogous( base: Color3 -- The base colour. ) → {Color3 }-- The analogous colours.   "},{"title":"Tetradic​","type":1,"pageTitle":"Palette","url":"api/Palette#Tetradic","content":"&lt;/&gt; Palette.Tetradic( base: Color3 -- The base colour. ) → {Color3 }-- The tetradic colours.   "},{"title":"Monochromatic​","type":1,"pageTitle":"Palette","url":"api/Palette#Monochromatic","content":"&lt;/&gt; Palette.Monochromatic( base: Color3 ,-- The base colour. swatches: number-- The number of swatches to generate. ) → {Color3 }-- The monochromatic colours.  "}]