[{"title":"APCA","type":0,"sectionRef":"#","url":"/colour-utils/api/APCA","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"APCA","url":"/colour-utils/api/APCA#functions","content":" "},{"title":"GetContrastRatio​","type":1,"pageTitle":"APCA","url":"/colour-utils/api/APCA#GetContrastRatio","content":"&lt;/&gt; APCA.GetContrastRatio( foreground: Color3 ,-- The foreground color. background: Color3 -- The background color. ) → number-- The contrast ratio [≈-100-100].  "},{"title":"Blend","type":0,"sectionRef":"#","url":"/colour-utils/api/Blend","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Blend","url":"/colour-utils/api/Blend#functions","content":" "},{"title":"Transparency​","type":1,"pageTitle":"Blend","url":"/colour-utils/api/Blend#Transparency","content":"&lt;/&gt; Blend.Transparency( background: Color3 ,-- The background color. foreground: Color3 ,-- The foreground color. transparency: number-- The transparency value. ) → Color3 -- The resulting color.   "},{"title":"Dodge​","type":1,"pageTitle":"Blend","url":"/colour-utils/api/Blend#Dodge","content":"&lt;/&gt; Blend.Dodge( background: Color3 ,-- The background color. foreground: Color3 -- The foreground color. ) → Color3 -- The resulting color.   "},{"title":"Multiply​","type":1,"pageTitle":"Blend","url":"/colour-utils/api/Blend#Multiply","content":"&lt;/&gt; Blend.Multiply( background: Color3 ,-- The background color. foreground: Color3 -- The foreground color. ) → Color3 -- The resulting color.   "},{"title":"Burn​","type":1,"pageTitle":"Blend","url":"/colour-utils/api/Blend#Burn","content":"&lt;/&gt; Blend.Burn( background: Color3 ,-- The background color. foreground: Color3 -- The foreground color. ) → Color3 -- The resulting color.   "},{"title":"Screen​","type":1,"pageTitle":"Blend","url":"/colour-utils/api/Blend#Screen","content":"&lt;/&gt; Blend.Screen( background: Color3 ,-- The background color. foreground: Color3 -- The foreground color. ) → Color3 -- The resulting color.   "},{"title":"Overlay​","type":1,"pageTitle":"Blend","url":"/colour-utils/api/Blend#Overlay","content":"&lt;/&gt; Blend.Overlay( background: Color3 ,-- The background color. foreground: Color3 -- The foreground color. ) → Color3 -- The resulting color.  "},{"title":"Blind","type":0,"sectionRef":"#","url":"/colour-utils/api/Blind","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Blind","url":"/colour-utils/api/Blind#types","content":" "},{"title":"Enums​","type":1,"pageTitle":"Blind","url":"/colour-utils/api/Blind#Enums","content":"&lt;/&gt; interface Enums { Blind: Blind-- Types of color blindness. Group: Group-- Color blindness groups. }   "},{"title":"Blind​","type":1,"pageTitle":"Blind","url":"/colour-utils/api/Blind#Blind","content":"Enum &lt;/&gt; interface Blind { Trichromacy: 0-- No color blindness. Protanopia: 1-- Red blind. Protanomaly: 2-- Red deficient. Deuteranopia: 3-- Green blind. Deuteranomaly: 4-- Green deficient. Tritanopia: 5-- Blue blind. Tritanomaly: 6-- Blue deficient. Achromatopsia: 7-- All colors are absent. Achromatomaly: 8-- All colors are deficient. None: 0-- Trichromacy (no color blindness). NoRed: 1-- Protanopia (red blind). LowRed: 2-- Protanomaly (red deficient). NoGreen: 3-- Deuteranopia (green blind). LowGreen: 4-- Deuteranomaly (green deficient). NoBlue: 5-- Tritanopia (blue blind). LowBlue: 6-- Tritanomaly (blue deficient). NoColor: 7-- Achromatopsia (totally color blind). LowColor: 8-- Achromatomaly (color deficient). } The Blind enum is used to represent the different types of color blindness. It features a number of aliases for non-scientists.  "},{"title":"Group​","type":1,"pageTitle":"Blind","url":"/colour-utils/api/Blind#Group","content":"Enum &lt;/&gt; interface Group { Trichroma: 0-- Trichromacy (no color blindness). Protan: 1-- Protanopia/Protanomaly. Deutan: 2-- Deuteranopia/Deuteranomaly. Tritan: 3-- Tritanopia/Tritanomaly. Achroma: 4-- Achromatopsia/Achromatomaly. } The Group enum is used to represent the different groups of color blindness. It is used internally by the Simulate method to determine which color blindness simulation to use. It is unlikely that you will need to use this enum. "},{"title":"Functions​","type":1,"pageTitle":"Blind","url":"/colour-utils/api/Blind#functions","content":" "},{"title":"Simulate​","type":1,"pageTitle":"Blind","url":"/colour-utils/api/Blind#Simulate","content":"&lt;/&gt; Blind.Simulate( color: Color3 ,-- The color to simulate. blinder: Blind-- The blinder to simulate with. ) → Color3 -- The simulated color.  "},{"title":"Hex","type":0,"sectionRef":"#","url":"/colour-utils/api/Hex","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Hex","url":"/colour-utils/api/Hex#functions","content":" "},{"title":"fromHex​","type":1,"pageTitle":"Hex","url":"/colour-utils/api/Hex#fromHex","content":"&lt;/&gt; Hex.fromHex( hex: string-- The hex string to convert. ) → Color3 -- The resulting Color3.  tip You can use hex values in any format. This includes with or without a leading hash, any case, and any length (FromHex will try to interpret malformed hex codes as best as possible).  "},{"title":"fromHexRGBA​","type":1,"pageTitle":"Hex","url":"/colour-utils/api/Hex#fromHexRGBA","content":"&lt;/&gt; Hex.fromHexRGBA( hex: string,-- The hex string to convert. background: Color3? -- The background color (defaults to black). ) → Color3 -- The resulting Color3. Creates a Color3 from a hex string with an alpha value. The background doesn't need to be specified, but the resulting Color3 will vary depending on the color of the background, so it's recommended to specify a background unless Color3.new() is what you want. If the hex string is less than 8 characters, it will be passed tofromHex and the resulting Color3 will be returned without transparency applied. Hex strings longer than 8 characters will be truncated to 8 characters will be accepted. If the hex string is longer than 8 characters, the last two characters will be used as the alpha value.  "},{"title":"toHex​","type":1,"pageTitle":"Hex","url":"/colour-utils/api/Hex#toHex","content":"&lt;/&gt; Hex.toHex( color: Color3 -- The color to convert. ) → string-- The hex representation of the color.  note The hex string is always lowercase, will always be 6 characters long, and is not prefixed with a hash. "},{"title":"HSL","type":0,"sectionRef":"#","url":"/colour-utils/api/HSL","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"HSL","url":"/colour-utils/api/HSL#types","content":" "},{"title":"HSL​","type":1,"pageTitle":"HSL","url":"/colour-utils/api/HSL#HSL","content":"&lt;/&gt; interface HSL { H: number S: number L: number }  "},{"title":"Functions​","type":1,"pageTitle":"HSL","url":"/colour-utils/api/HSL#functions","content":" "},{"title":"toHSL​","type":1,"pageTitle":"HSL","url":"/colour-utils/api/HSL#toHSL","content":"&lt;/&gt; HSL.toHSL( color: Color3 -- The color to convert. ) → HSL-- The HSL representation of the color.   "},{"title":"fromHSL​","type":1,"pageTitle":"HSL","url":"/colour-utils/api/HSL#fromHSL","content":"&lt;/&gt; HSL.fromHSL( hsl: HSL-- The HSL color to convert. ) → Color3 -- The resulting Color3.  "},{"title":"Int","type":0,"sectionRef":"#","url":"/colour-utils/api/Int","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Int","url":"/colour-utils/api/Int#functions","content":" "},{"title":"fromInt​","type":1,"pageTitle":"Int","url":"/colour-utils/api/Int#fromInt","content":"&lt;/&gt; Int.fromInt( int: number-- The integer to convert. ) → Color3 -- The resulting Color3.   "},{"title":"toInt​","type":1,"pageTitle":"Int","url":"/colour-utils/api/Int#toInt","content":"&lt;/&gt; Int.toInt( color: Color3 -- The color to convert. ) → number-- The integer representation of the color.  "},{"title":"ColorUtils","type":0,"sectionRef":"#","url":"/colour-utils/api/ColorUtils","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#functions","content":" "},{"title":"Darken​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#Darken","content":"&lt;/&gt; ColorUtils.Darken( color: Color3 ,-- The color to darken. coefficient: number-- The amount to darken by [0-1]. ) → Color3 -- The darkened color.   "},{"title":"Invert​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#Invert","content":"&lt;/&gt; ColorUtils.Invert( color: Color3 -- The color to invert. ) → Color3 -- The inverted color.   "},{"title":"Saturate​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#Saturate","content":"&lt;/&gt; ColorUtils.Saturate( color: Color3 ,-- The color to saturate. coefficient: number-- The coefficient to saturate by [0-1]. ) → Color3 -- The saturated color.   "},{"title":"Emphasize​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#Emphasize","content":"&lt;/&gt; ColorUtils.Emphasize( color: Color3 ,-- The color to emphasize. coefficient: number,-- The amount to emphasize by [0-1]. threshold?: number-- The threshold for light/dark [0-1] (defaults to 0.5). ) → Color3 -- The emphasized color.   "},{"title":"Desaturate​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#Desaturate","content":"&lt;/&gt; ColorUtils.Desaturate( color: Color3 ,-- The color to desaturate. coefficient: number-- The coefficient to desaturate by [0-1]. ) → Color3 -- The desaturated color.   "},{"title":"Lighten​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#Lighten","content":"&lt;/&gt; ColorUtils.Lighten( color: Color3 ,-- The color to lighten. coefficient: number-- The amount to lighten by [0-1]. ) → Color3 -- The lightened color.   "},{"title":"isDark​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#isDark","content":"&lt;/&gt; ColorUtils.isDark( color: Color3 -- The color to check. ) → boolean-- Whether the color is dark.   "},{"title":"GetLuminance​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#GetLuminance","content":"&lt;/&gt; ColorUtils.GetLuminance( color: Color3 -- The color to get the luminance of. ) → number-- The luminance of the color [0-1].   "},{"title":"Rotate​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#Rotate","content":"&lt;/&gt; ColorUtils.Rotate( color: Color3 ,-- The color to rotate. angle: number-- The angle to rotate by. ) → Color3 -- The rotated color.   "},{"title":"GetPerceivedBrightness​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#GetPerceivedBrightness","content":"&lt;/&gt; ColorUtils.GetPerceivedBrightness( color: Color3 -- The color to get the perceived brightness of. ) → number-- The perceived brightness of the color [0-1].   "},{"title":"isLight​","type":1,"pageTitle":"ColorUtils","url":"/colour-utils/api/ColorUtils#isLight","content":"&lt;/&gt; ColorUtils.isLight( color: Color3 -- The color to check. ) → boolean-- Whether the color is light.  "},{"title":"LCH","type":0,"sectionRef":"#","url":"/colour-utils/api/LCH","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"LCH","url":"/colour-utils/api/LCH#functions","content":" "},{"title":"fromLCH​","type":1,"pageTitle":"LCH","url":"/colour-utils/api/LCH#fromLCH","content":"&lt;/&gt; LCH.fromLCH( lch: LCH-- The color to convert. ) → Color3 -- The converted color.   "},{"title":"toLCH​","type":1,"pageTitle":"LCH","url":"/colour-utils/api/LCH#toLCH","content":"&lt;/&gt; LCH.toLCH( color: Color3 -- The color to convert. ) → LCH-- The converted color.  "},{"title":"LAB","type":0,"sectionRef":"#","url":"/colour-utils/api/LAB","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"LAB","url":"/colour-utils/api/LAB#types","content":" "},{"title":"LAB​","type":1,"pageTitle":"LAB","url":"/colour-utils/api/LAB#LAB","content":"&lt;/&gt; interface LAB { L: number A: number B: number }  "},{"title":"Functions​","type":1,"pageTitle":"LAB","url":"/colour-utils/api/LAB#functions","content":" "},{"title":"fromLAB​","type":1,"pageTitle":"LAB","url":"/colour-utils/api/LAB#fromLAB","content":"&lt;/&gt; LAB.fromLAB( lab: LAB-- The color to convert. ) → Color3 -- The converted color.   "},{"title":"Lerp​","type":1,"pageTitle":"LAB","url":"/colour-utils/api/LAB#Lerp","content":"&lt;/&gt; LAB.Lerp( from: Color3 ,-- The color to interpolate from. to: Color3 ,-- The color to interpolate to. alpha: number-- The amount to interpolate by (typically between 0-1). ) → Color3 -- The resulting color. Interpolates between two Color3s using the CIELAB color space.  "},{"title":"toLAB​","type":1,"pageTitle":"LAB","url":"/colour-utils/api/LAB#toLAB","content":"&lt;/&gt; LAB.toLAB( color: Color3 -- The color to convert. ) → LAB-- The converted color.  "},{"title":"WCAG","type":0,"sectionRef":"#","url":"/colour-utils/api/WCAG","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"WCAG","url":"/colour-utils/api/WCAG#functions","content":" "},{"title":"GetContrastingColor​","type":1,"pageTitle":"WCAG","url":"/colour-utils/api/WCAG#GetContrastingColor","content":"&lt;/&gt; WCAG.GetContrastingColor( foreground: Color3 ,-- The foreground color. background: Color3 ,-- The background color. ratio?: number-- The ratio to check against [0-1] (defaults to 4.5). ) → Color3 -- The contrasting color.   "},{"title":"GetContrastRatio​","type":1,"pageTitle":"WCAG","url":"/colour-utils/api/WCAG#GetContrastRatio","content":"&lt;/&gt; WCAG.GetContrastRatio( foreground: Color3 ,-- The foreground color. background: Color3 -- The background color. ) → number-- The contrast ratio [0-21].  "},{"title":"Palette","type":0,"sectionRef":"#","url":"/colour-utils/api/Palette","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#functions","content":" "},{"title":"Tailwind​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Tailwind","content":"&lt;/&gt; Palette.Tailwind( base: Color3 -- The base color. ) → TailwindPalette-- The generated palette. "},{"title":"Types","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette##","content":""},{"title":"​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#TailwindPalette","content":"interface TailwindPalette { 50: Color3 100: Color3 200: Color3 300: Color3 400: Color3 500: Color3 600: Color3 700: Color3 800: Color3 900: Color3 950: Color3 }  Generates a TailwindCSS-like palette from a given base color. The generator is based on Smart Swatch by Ivan Dalmet, so results will not be identical to TailwindCSS. local BASE_COLOR = Color3.fromHex(&quot;#00a2ff&quot;) local palette = Tailwind(BASE_COLOR)   "},{"title":"Nearest​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Nearest","content":"&lt;/&gt; Palette.Nearest( to: Color3 ,-- The color to find the nearest color to. colors: {Color3 }-- The array of colors to search through. ) → Color3 -- The nearest color. Given an array of Color3s, returns the color that is closest to the given Color3.  "},{"title":"Analogous​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Analogous","content":"&lt;/&gt; Palette.Analogous( base: Color3 -- The base color. ) → {Color3 }-- The analogous colors.   "},{"title":"Tetradic​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Tetradic","content":"&lt;/&gt; Palette.Tetradic( base: Color3 -- The base color. ) → {Color3 }-- The tetradic colors.   "},{"title":"Vibrant​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Vibrant","content":"&lt;/&gt; Palette.Vibrant( swatches: {Color3 },-- The swatches to select from. options?: VibrantOptions-- The options to use. ) → Color3 -- The &quot;most vibrant&quot; color. "},{"title":"Types","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette##","content":""},{"title":"​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#VibrantOptions","content":"interface VibrantOptions { TargetLuminance: number-- The target luminance. TargetSaturation: number-- The target saturation. TargetValue: number-- The target value. }  The default options are: { TargetLuminance = 0.49, TargetSaturation = 1, TargetValue = 0.8, }   "},{"title":"Triadic​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Triadic","content":"&lt;/&gt; Palette.Triadic( base: Color3 -- The base color. ) → {Color3 }-- The triadic colors.   "},{"title":"SplitComplementary​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#SplitComplementary","content":"&lt;/&gt; Palette.SplitComplementary( base: Color3 -- The base color. ) → {Color3 }-- The split complementary colors.   "},{"title":"Monochromatic​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Monochromatic","content":"&lt;/&gt; Palette.Monochromatic( base: Color3 ,-- The base color. swatches: number-- The number of swatches to generate. ) → {Color3 }-- The monochromatic colors.   "},{"title":"Complementary​","type":1,"pageTitle":"Palette","url":"/colour-utils/api/Palette#Complementary","content":"&lt;/&gt; Palette.Complementary( base: Color3 -- The base color. ) → {Color3 }-- The complementary colors.  "}]