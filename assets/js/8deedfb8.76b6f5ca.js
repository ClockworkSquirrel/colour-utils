"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return s}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,o=e.parentName,m=d(e,["components","mdxType","originalType","parentName"]),c=u(n),s=l,k=c["".concat(o,".").concat(s)]||c[s]||p[s]||i;return n?a.createElement(k,r(r({ref:t},m),{},{components:n})):a.createElement(k,r({ref:t},m))}));function s(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=c;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:l,r[1]=d;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},52157:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return m},default:function(){return c}});var a=n(87462),l=n(63366),i=(n(67294),n(3905)),r=["components"],d={},o="Changelog",u={type:"mdx",permalink:"/colour-utils/CHANGELOG",source:"@site/pages/CHANGELOG.md"},m=[{value:"1.3.1",id:"131",children:[],level:2},{value:"1.3.0",id:"130",children:[{value:"Added",id:"added",children:[],level:3},{value:"Changed",id:"changed",children:[],level:3}],level:2},{value:"1.2.0",id:"120",children:[{value:"Added",id:"added-1",children:[],level:3},{value:"Changed",id:"changed-1",children:[],level:3},{value:"Removed",id:"removed",children:[],level:3}],level:2},{value:"1.1.1",id:"111",children:[{value:"Added",id:"added-2",children:[],level:3}],level:2},{value:"1.1.0",id:"110",children:[{value:"Added",id:"added-3",children:[],level:3}],level:2},{value:"1.0.3",id:"103",children:[{value:"Added",id:"added-4",children:[],level:3}],level:2},{value:"1.0.2",id:"102",children:[{value:"Added",id:"added-5",children:[],level:3}],level:2},{value:"1.0.1",id:"101",children:[{value:"Added",id:"added-6",children:[],level:3}],level:2}],p={toc:m};function c(e){var t=e.components,n=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"changelog"},"Changelog"),(0,i.kt)("h2",{id:"131"},"[1.3.1]"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Implemented transparency blending:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"This returns a new Color3 that acts as if it was overlaid on a background color with a given alpha."))),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"Hex.fromHexRGBA"),", which converts a hex string with an alpha channel to a Color3.")),(0,i.kt)("h2",{id:"130"},"[1.3.0]"),(0,i.kt)("h3",{id:"added"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Implemented colour space conversions.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"HSL")," (",(0,i.kt)("inlineCode",{parentName:"li"},".fromHSL, .toHSL"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LAB")," (",(0,i.kt)("inlineCode",{parentName:"li"},".fromLAB, .toLAB"),") ",(0,i.kt)("em",{parentName:"li"},"(\ud83e\uddea experimental)"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LCH")," (",(0,i.kt)("inlineCode",{parentName:"li"},".fromLCH, .toLCH"),") ",(0,i.kt)("em",{parentName:"li"},"(\ud83e\uddea experimental)"),"."))),(0,i.kt)("li",{parentName:"ul"},"Saturation methods to either saturate or desaturate a colour."),(0,i.kt)("li",{parentName:"ul"},"Tailwind CSS-style palette generator - Generates 10 swatches, given a base colour, and returns a ",(0,i.kt)("inlineCode",{parentName:"li"},"TailwindPalette")," object (see the docs for more details).")),(0,i.kt)("h3",{id:"changed"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Updated the docs for Hex and Int. The converter methods were previously documented in PascalCase, but they should have been documented in camelCase."),(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"Palette.Monochromatic")," method now accepts an optional second parameter, ",(0,i.kt)("inlineCode",{parentName:"li"},"swatches"),", which defaults to ",(0,i.kt)("inlineCode",{parentName:"li"},"3"),". This is to allow for more control over the number of swatches generated.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"\u26a0\ufe0f Warning:")," The behaviour of monochromatic has been changed to allow for more control over the number of swatches generated."),(0,i.kt)("li",{parentName:"ul"},"The new behaviour will return ",(0,i.kt)("inlineCode",{parentName:"li"},"X")," amount of swatches, ",(0,i.kt)("strong",{parentName:"li"},"including")," the base colour. The results do not necessarily include a single lighter and darker swatch, and the resulting array is now sorted from darkest to lightest (most vibrant).")))),(0,i.kt)("h3",{id:""}),(0,i.kt)("h2",{id:"120"},"[1.2.0]"),(0,i.kt)("h3",{id:"added-1"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"WCAG")," submodule to house the current ",(0,i.kt)("inlineCode",{parentName:"li"},".GetContrastRatio")," and ",(0,i.kt)("inlineCode",{parentName:"li"},".GetContrastingColour")," methods."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"APCA")," submodule, which contains an updated version of ",(0,i.kt)("inlineCode",{parentName:"li"},".GetContrastRatio"),"."),(0,i.kt)("li",{parentName:"ul"},"Implemented colour blindness simulation under the ",(0,i.kt)("inlineCode",{parentName:"li"},"Blind")," submodule.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Supports the Trichroma-, Protan-, Deutan-, Tritan- and Achroma- groups."),(0,i.kt)("li",{parentName:"ul"},'Includes friendly "',(0,i.kt)("inlineCode",{parentName:"li"},"Enums"),'" for non-scientists.'))),(0,i.kt)("li",{parentName:"ul"},"Documentation site using ",(0,i.kt)("a",{parentName:"li",href:"https://upliftgames.github.io/moonwave/"},"moonwave"),"."),(0,i.kt)("li",{parentName:"ul"},"TypeScript alias for ",(0,i.kt)("inlineCode",{parentName:"li"},".GetContrastingColour")," in root namespace (previously only Luau).")),(0,i.kt)("h3",{id:"changed-1"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},".GetContrastRatio")," and ",(0,i.kt)("inlineCode",{parentName:"li"},".GetContrastingColour")," now redirect to the ",(0,i.kt)("inlineCode",{parentName:"li"},"WCAG")," submodule."),(0,i.kt)("li",{parentName:"ul"},"Updated toolchain to use rojo 7; fixed other dependencies to an exact version.")),(0,i.kt)("h3",{id:"removed"},"Removed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Removed ",(0,i.kt)("inlineCode",{parentName:"li"},"rotriever.toml")," to drop support for kayak and other rotriever-based package managers.")),(0,i.kt)("h2",{id:"111"},"[1.1.1]"),(0,i.kt)("h3",{id:"added-2"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".GetContrastingColour")," to adjust a forground colour to meet the minimum contrast ratio against a background colour.")),(0,i.kt)("h2",{id:"110"},"[1.1.0]"),(0,i.kt)("h3",{id:"added-3"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".GetPerceivedBrightness")," method to return a value representing colour visibility."),(0,i.kt)("li",{parentName:"ul"},"Implemented ",(0,i.kt)("inlineCode",{parentName:"li"},"Palette")," colour harmony and theming submodule.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Analogous"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Complementary"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Monochromatic"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".SplitComplementary"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Triadic"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Tetradic"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Vibrant"),".")))),(0,i.kt)("h2",{id:"103"},"[1.0.3]"),(0,i.kt)("h3",{id:"added-4"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Rotate")," method to rotate the hue of a ",(0,i.kt)("inlineCode",{parentName:"li"},"Color3"),"."),(0,i.kt)("li",{parentName:"ul"},"Implemented ",(0,i.kt)("inlineCode",{parentName:"li"},"Blend")," blending operations submodule.",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Burn"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Dodge"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Multiply"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Overlay"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Screen"),".")))),(0,i.kt)("h2",{id:"102"},"[1.0.2]"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Published to NPM.")),(0,i.kt)("h3",{id:"added-5"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added TypeScript typings for use with roblox-ts."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".Invert")," method to invert a ",(0,i.kt)("inlineCode",{parentName:"li"},"Color3"),"."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".isDark")," method to determine if a ",(0,i.kt)("inlineCode",{parentName:"li"},"Color3")," is dark."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},".isLight")," method to determine if a ",(0,i.kt)("inlineCode",{parentName:"li"},"Color3")," is light.")),(0,i.kt)("h2",{id:"101"},"[1.0.1]"),(0,i.kt)("h3",{id:"added-6"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"threshold")," as a third argument to ",(0,i.kt)("inlineCode",{parentName:"li"},"Emphasise"),".")))}c.isMDXComponent=!0}}]);